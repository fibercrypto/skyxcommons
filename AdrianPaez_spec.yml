openapi: 3.0.0
info:
  title: Python to .Net
  description: Still whitout description.
  version: 0.25.1
servers:
- url: http://www.skycoin.net
  description: Main Skycoin server
- url: http://staging.node.skycoin.net
  description: Internal staging server for developer.
components:
  securitySchemes:
    CsrfTokenAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: X-CSRF-TOKEN  # name of the header, query parameter or cookie
  schemas:
    genericError:
      description: This is a generic error that should be default response
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
    
    transaction:
      description: Represents a transiction
      type: object
      properties:
        operationId:
          description: Operation ID. Can be empty. Should be not empty for  ransactions that broadcasted using this Blockchain.Api
          type: guid
        timespam:
          description: Transaction moment as ISO 8601 in UTC
          format: date-time
          type: string
        fromAddress:
          description: Source address
          type: string
        toAddress:
          description: Destination address
          type: string
        assetId:
          description: Asset ID e.g. SKY
          type: string
        ammount:
          description: Amount without fee. Is integer as string, aligned to the asset accuracy. Actual value can be calculated as x = sourceAmount * (10 ^ asset.Accuracy)
          type: string
        hash:
          description: Transaction hash as base64 string
          type: string

paths:
  /api/wallets:
    post:
      summary: Create wallet method.
      description: Should create a new wallet (address) in the blockchain.

      security:
      - CsrfTokenAuth: []

      responses:
        '200':
          description: The private key, public address and address context for the wallet created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  privateKey:
                    description: Private key, which will be used to sign transactions by the [POST] /api/sign
                    type: string
                  publicAddress:
                    description: Address which identifies the wallet in the blockchain
                    type: string
                  addressContext:
                    description: Any non security sensitive data associated with wallet. This context will be passed to [POST] /api/transactions/*. Can be empty.
                    type: string
        default:
          $ref : '#/components/schemas/genericError'
          
  /api/balances/{address}/observation:
    delete:
      summary: Delete observation
      description: Should forget the wallet address and stop observing its balance.
      
      security:
      - CsrfTokenAuth: []
      
      parameters:
        - name: address
          in: path
          required: true
          description: Address of the wallet
          schema:
            type: string
      
      responses:
        '200':
          description: DELETE is OK
        default:
          $ref: '#/components/schemas/genericError'
          
    post:
      summary: Create balance observation
      
      description: Should remember the wallet address to observe the wallet balance and return it in the [GET] /api/balances , if the balance is non zero.
      
      security: 
      - CsrfTokenAuth: []
      
      parameters: 
      - name: address
        description: Address of the wallet
        in: path
        required: true
        schema:
          type: string
          
      responses:
        '200':
          description: POST is OK
        default:
          $ref: '#/components/schemas/genericError'

  /api/transactions/history/to/{address}?take=integer&[afterHash=string]:
    get:
      summary: Get history to address
      description: Should return completed transactions that transfer fund to the address and that were broadcasted after the transaction with the hash equal to the `afterHash`. If `afterHash` is empty, transactions should be read from the beginning. Should include all transactions broadcasted even those not going through `/transaction/broadcast/*` API endpoints. If there are no transactions to return, empty array should be returned. Amount of the returned transactions should not exceed take.
      
      security: 
      - CsrfTokenAuth: []
      
      parameters: 
        - name: address
          in: path
          required: true
          description: Address from which you want to know the history
          schema:
            type: string
        - name: take
          in: query
          required: false
          description: Maximum return transactions
          schema:
            type: integer
        - name: afterHash
          in: query
          required: false
          description: Address of the transaction after which you have to search
          schema:
            type: string

      responses:
        '200':
          description: 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transaction'
# To remember :
#  Every post method should use security schema.
#  Feel free to use and reuse components
#  I will remember other stuffs in the process