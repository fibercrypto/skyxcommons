openapi: 3.0.0
info:
  title: Python to .Net
  description: Still whitout description.
  version: 0.25.1
servers:
- url: http://www.skycoin.net
  description: Main Skycoin server
- url: http://staging.node.skycoin.net
  description: Internal staging server for developer.
components:
  securitySchemes:
    CsrfTokenAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: X-CSRF-TOKEN  # name of the header, query parameter or cookie
  schemas:
    genericError:
      description: This is a generic error that should be default response
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
    
    transaction:
      description: Represents a transiction
      type: object
      properties:
        operationId:
          description: Operation ID. Can be empty. Should be not empty for ransactions that broadcasted using this Blockchain.Api
          type: string
        timespam:
          description: Transaction moment as ISO 8601 in UTC
          type: string
        fromAddress:
          description: Source address
          type: string
        toAddress:
          description: Destination address
          type: string
        assetId:
          description: Asset ID e.g. SKY
          type: string
        ammount:
          description: Amount without fee. Is integer as string, aligned to the asset accuracy. Actual value can be calculated as x = sourceAmount * (10 ^ asset.Accuracy)
          type: string
        hash:
          description: Transaction hash as base64 string
          type: string
paths:
  /api/wallets:
    post:
      summary: Create wallet method.
      description: Should create a new wallet (address) in the blockchain.

      security:
      - CsrfTokenAuth: []

      responses:
        '200':
          description: The private key, public address and address context for the wallet created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  privateKey:
                    description: Private key, which will be used to sign transactions by the [POST] /api/sign
                    type: string
                  publicAddress:
                    description: Address which identifies the wallet in the blockchain
                    type: string
                  addressContext:
                    description: Any non security sensitive data associated with wallet. This context will be passed to [POST] /api/transactions/*. Can be empty.
                    type: string
        default:
          $ref : '#/components/schemas/genericError'
          
  /api/balances/{address}/observation:
    delete:
      summary: Delete observation
      description: Should forget the wallet address and stop observing its balance.
      
      security:
      - CsrfTokenAuth: []
      
      parameters:
        - name: address
          in: path
          required: true
          description: Address of the wallet
          schema:
            type: string
      
      responses:
        '200':
          description: DELETE is OK
        default:
          $ref: '#/components/schemas/genericError'
          
    post:
      summary: Create balance observation
      
      description: Should remember the wallet address to observe the wallet balance and return it in the [GET] /api/balances , if the balance is non zero.
      
      security: 
      - CsrfTokenAuth: []
      
      parameters: 
      - name: address
        description: Address of the wallet
        in: path
        required: true
        schema:
          type: string
          
      responses:
        '200':
          description: POST is OK
        default:
          $ref: '#/components/schemas/genericError'

  /api/transactions/history/to/{address}:
    get:
      summary: Get history to address
      description: Should return completed transactions that transfer fund to the address and that were broadcasted after the transaction with the hash equal to the `afterHash`. If `afterHash` is empty, transactions should be read from the beginning. Should include all transactions broadcasted even those not going through `/transaction/broadcast/*` API endpoints. If there are no transactions to return, empty array should be returned. Amount of the returned transactions should not exceed take.
      
      security: 
      - CsrfTokenAuth: []
      
      parameters: 
        - name: address
          in: path
          required: true
          description: Address from which you want to know the history
          schema:
            type: string
        - name: take
          in: query
          required: false
          description: Maximum return transactions
          schema:
            type: integer
        - name: afterHash
          in: query
          required: false
          description: Address of the transaction after which you have to search
          schema:
            type: string

      responses:
        '200':
          description: Transactions array.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/transaction'
        default:
          $ref: '#/components/schemas/genericError'
      
  /api/transactions/single:           
    post:
      summary: Build not signed single transaction
      description: Should build not signed transaction to transfer from the single source to the single destination. If the transaction with the specified operationId has already been built by one of the [POST] /api/transactions/* call, it should be ignored and regular response (as in the first request) should be returned.
      
      security:
      - CsrfTokenAuth: []

      requestBody:
        required: true
        description: Transaction object
        content:
          application/json:
            schema:
              description: Object representing the transaction
              type: object
              properties:
                operationId:
                  description: Operation ID
                  type: string
                fromAddress: 
                  type: string
                  description: Source address
                toAddress:
                  type: string
                  description: Destination address
                assetId:
                  type: string
                  description: Asset ID to transfer
                includeFee:
                  type: boolean
                  description: Ignored. No Fiber coin implements this ... yet
                amount: 
                  type: string
                  description: Amount to transfer. Integer as string, aligned to the asset accuracy. Actual value can be calculated as x = amount / (10 ^ asset.Accuracy)
                
             
              
                

      responses:
        '200':    # status code
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  
                  ErrorCode:
                    description: Error Code
                    type: string
                    enum:
                    - amountIsTooSmall
                    - notEnoughBalance
                  
                  transactionContext:
                    description: The transaction context which will be passed to the [POST] /api/sign
                    type: string
                  
        default:
          $ref : '#/components/schemas/genericError'
          
          
  /api/balances:
    get:
      summary: Return balance of the observed wallets
      description: Should return balances of the observed wallets with non zero balances. Wallets balance observation is enabled by the [POST] /api/balances/{address}/observation and disabled by the [DELETE] /api/balances/{address}/observation.
      parameters:
        - name: take
          in: query
          required: true
          schema:
            type: integer
          description: Limit amount of the returned values
        - name: continuation
          in: query
          required: false
          schema:
            type: string
          description: context of the previous request
          
      responses:
        '200':    # status code
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  isValid:
                    description: Indicate if the address is valid
                    type: boolean
                  
                  continuation:
                    description: Continuation token 
                    type: string
                  
                  items:
                    description: Current batch of items
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          description: Wallet address
                          type: string
                        assetId:
                          description: Asset ID
                          type: string
                       
                        balance:
                          description: Balance is integer as string, aligned to the asset accuracy. Actual value can be calculated as x = sourceBalance * (10 ^ asset.Accuracy)Balance is integer as string, aligned to the asset accuracy. Actual value can be calculated as x = sourceBalance * (10 ^ asset.Accuracy)
                          type: string
                        block:
                          description: Incremental ID of the moment, when balance is updated. It should be the same sequence as for block in the [GET] /api/transactions/broadcast/* responses
                          type: integer
                        
                        
                        
                  
        default:
          $ref : '#/components/schemas/genericError'
          
          
  /api/transaction/many-inputs:
    post:
      summary: Build not signed transactions with many inputs.
      description: Should build not signed transaction with many inputs. If the transaction with the specified operationId has already been built by one of the [POST] /api/transactions/* call, it should be ignored
      
      security:
        - CsrfTokenAuth: []
    
      requestBody:
        required: true
        description: Transaction object
        content:
          application/json:
            schema:
              description: ewr
              type: object
              properties:
                operationId:
                  description: Operation ID
                  type: string
              
                inputs:
                  description: Sources
                  type: array
                  items:
                    type: object
                    properties:
                      fromAddress:
                        description: Source Address
                        type: string
                      amount:
                        description: Amount to transfer from the  fromAddress. Integer as string, aligned to the droplet precision exponent. Actual value can be calculated as x = amount / (10 ^ asset.Accuracy).
                        type: string

                toAddress: 
                  description: Destination Address
                  type: string
                assetId: 
                  description: Ticker ID of the fiber coin, SKY by default
                  type: string
                  
                  
      responses:
        '200':    # status code
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  
                  ErrorCode:
                    description: Error Code
                    type: string
                    enum:
                    - amountIsTooSmall
                    - notEnoughBalance
                  
                  transactionContext:
                    description: The transaction context which will be passed to the [POST] /api/sign
                    type: string
                  
        default:
          $ref : '#/components/schemas/genericError'
      
              
  /api/IsAlive:
    get:
      summary:  Return some general service info
      description: Check if the server is running correctly
      responses:
        '200':    #status code
          description:  A JSON object containing information about the service
          content:
            application/json:
              schema:
                type: object
                
                properties:
                  name:
                    description: Name of the service
                    type: string
                  version:
                    description: Version of the service
                    type: string
                  env:
                    description: ENV_INFO environment variable value
                    type: string
                  isDebug:
                    description: Flag, wich indicates if the service is built in the debug configuration or not
                    type: boolean
        
        default:
         $ref: '#/components/schemas/genericError'    